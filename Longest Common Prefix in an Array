Question-

Given a array of N strings, find the longest common prefix among all strings present in the array.


Example 1:

Input:
N = 4
arr[] = {geeksforgeeks, geeks, geek,
         geezer}
Output: gee
Explanation: "gee" is the longest common
prefix in all the given strings.
Example 2:

Input: 
N = 2
arr[] = {hello, world}
Output: -1
Explanation: There's no common prefix
in the given strings.

Your Task:
You don't need to read input or print anything. Your task is to complete the function longestCommonPrefix() which takes the string array arr[] and its size N 
as inputs and returns the longest common prefix common in all the strings in the array. If there's no prefix common in all the strings, return "-1".


Expected Time Complexity: O(N*max(|arri|)).
Expected Auxiliary Space: O(max(|arri|)) for result.


Solution--------------------------------------------------------------------------------------------------------------------------------------------------------------------

class Solution{
    String longestCommonPrefix(String arr[], int n){
        // code here
        if(arr.length == 1) return arr[0];
        String str1 = arr[0];
        String str2 = arr[1];
        String res = "";
        
        int i=0;
        int j=0;
        
        while(i<str1.length() && j<str2.length()){
            if(str1.charAt(i)!= str2.charAt(j)) break;
            res+= str1.charAt(i);
            i++;
            j++;
            
        }
        
        if(res.length()==0) return "-1";
        
        for(int x=2;x<arr.length;x++){
            
            i=0;
            j=0;
            
            while(i<arr[x].length() && j< res.length() ){
                if(arr[x].charAt(i) != res.charAt(j)) break;
                i++;
                j++;
            }
            
            res = res.substring(0,Math.min(i,j));
        }
        if(res.length()==0) return "-1";
        else return res;
    }
}
